# Generated by Django 5.1.4 on 2025-01-15 06:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('system', '0004_remove_modellabelfield_align_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Channel Name')),
                ('playlist_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='M3U8 File Name')),
                ('status', models.CharField(choices=[('enabled', 'Enabled'), ('disabled', 'Disabled')], default='enabled', max_length=20, verbose_name='Channel Status')),
                ('stream_status', models.CharField(choices=[('live', 'Online'), ('offline', 'Offline')], default='offline', max_length=20, verbose_name='Stream Status')),
                ('url', models.CharField(blank=True, max_length=128, null=True, verbose_name='Stream URL')),
                ('expired', models.DateTimeField(blank=True, null=True, verbose_name='Expiration Time')),
                ('frag_count', models.IntegerField(blank=True, null=True, verbose_name='TS File Count')),
                ('frag_duration', models.IntegerField(blank=True, null=True, verbose_name='TS File Duration')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('dept_belong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='dept_belong_query', to='system.deptinfo', verbose_name='Data ownership department')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('device_id', models.CharField(max_length=64, unique=True, verbose_name='Device ID')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='Manufacturer')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Device Name')),
                ('type', models.CharField(choices=[('IPC', 'IPC'), ('patrol', 'Patrol Assistant')], default='IPC', max_length=20, verbose_name='Device Type')),
                ('status', models.CharField(choices=[('live', 'Online'), ('offline', 'Offline')], default='offline', max_length=20, verbose_name='Stream Status')),
                ('playlist_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Main M3U8 File Name')),
                ('is_bound', models.BooleanField(default=False, verbose_name='Is Bound')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('dept_belong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='dept_belong_query', to='system.deptinfo', verbose_name='Data ownership department')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='DeviceChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_channels', to='device.channel', verbose_name='Channel')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('dept_belong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='dept_belong_query', to='system.deptinfo', verbose_name='Data ownership department')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_channels', to='device.device', verbose_name='Device')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Device Channel',
                'verbose_name_plural': 'Device Channels',
                'ordering': ('-created_time',),
            },
        ),
        migrations.AddField(
            model_name='device',
            name='channels',
            field=models.ManyToManyField(related_name='devices', through='device.DeviceChannel', to='device.channel', verbose_name='Channels'),
        ),
        migrations.AddIndex(
            model_name='devicechannel',
            index=models.Index(fields=['device', 'is_active'], name='device_devi_device__95715b_idx'),
        ),
        migrations.AddIndex(
            model_name='devicechannel',
            index=models.Index(fields=['channel', 'is_active'], name='device_devi_channel_fe3a79_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='devicechannel',
            unique_together={('device', 'channel')},
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_id'], name='device_devi_device__7f6d5c_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['status'], name='device_devi_status_db0e43_idx'),
        ),
    ]
